<?xml version="1.0" encoding="utf-8"?>
<Task>
	<Components>
		<ImageSource type="CameraUniCap" thread="ImageSourceThread" group="s1">
			<dev>
				<device>/dev/video1</device>
			<!--	 <input>S-Video</input> -->
				 <input>Composite0</input>    
				
			</dev>
		</ImageSource>
		
		<!-- <CvUndistort type="CvUndistort" thread="ImageSourceThread" group="s1">
			<cameraMatrix>
				[3,3](
					(647.07647705, 0., 383.50000000),
					(0., 632.76348877, 287.50000000),
					(0, 0, 1)
				)
			</cameraMatrix>
			<distCoeffs>
				[1,5](
					(-0.51084775, 0.23313555, 4.50637517e-03, -6.86281081e-03, 4.94365674e-03)
				)
			</distCoeffs> -->
		<!-- </CvUndistort> -->

		<!--<NewestImage type="NewestImage" thread="ProcessingThread" group="s1"> -->
		<!-- </NewestImage> -->

		<CvFindLabirynth type="CvFindLabirynth" thread="ProcessingThread" group="s1">
		</CvFindLabirynth>
				
		<!-- <VisualServoIB type="VisualServoIB" thread="ProcessingThread" group="s1">
		</VisualServoIB> -->
		
		<Mrrocpp type="Mrrocpp" thread="MrrocProxyThread" group="s1">
			<port>8888</port>
		</Mrrocpp>
		 
		<Window type="CvWindow" thread="PreviewExecutor" group="s1">
			<title>Preview</title>
		</Window>
	</Components>

	<Executors>
		<ImageSourceThread type="passive">
			<main_component>ImageSource</main_component>
		</ImageSourceThread>
		
		<ProcessingThread type="passive">
			<main_component>NewestImage</main_component>
		</ProcessingThread>
		
		<MrrocProxyThread type="continuous">
			<main_component>Mrrocpp</main_component>
		</MrrocProxyThread>
		
		<PreviewExecutor type="periodic">
			<main_component>Window</main_component>
			<interval>0.03</interval>
		</PreviewExecutor>
	</Executors>

	<Events>
		<Event source="ImageSource.newImage" destination="CvFindLabirynth.onNewImage"/>
	<!--	<Event source="CvUndistort.newUndistortedImage" destination="NewestImage.onNewImage"/>
		
		<Event source="NewestImage.newImage" destination="CvFindLabirynth.onNewImage"/> -->

		<Event source="CvFindLabirynth.newImage" destination="Window.onNewImage"/>
				
		<Event source="Mrrocpp.rpcCall" destination="CvFindLabirynth.onRpcCall"/>
		
		<Event source="CvFindLabirynth.rpcResult" destination="Mrrocpp.onRpcResult"/>
		<!--
		<Event source="CvFindLabirynth.labirynthFound" destination="VisualServoIB.onObjectLocated"/>
		<Event source="CvFindLabirynth.labirynthNotFound" destination="VisualServoIB.onObjectNotFound"/>
		
		<Event source="VisualServoIB.readingReady" destination="Mrrocpp.onNewReading"/> -->
		

	</Events>

	<DataStreams>
		<ImageSource>
			<out_img type="out" group="NewestImage"/>
		</ImageSource>
		<!--
		<CvUndistort>
			<in_img type="in" group="OriginalImage"/>
			<out_img type="out" group="UndistortedImage"/>
		</CvUndistort>
		
		<NewestImage>
			<in_img type="in" group="UndistortedImage"/>
			<out_img type="out" group="NewestImage"/>
		</NewestImage> -->
		
		<CvFindLabirynth>
			<in_img type="in" group="NewestImage"/>
			<rpcParam type="in" group="rpcParam"/>
			<rpcResult type="out" group="rpcResult"/>
			<out_img type="out" group="NewImage"/>
		</CvFindLabirynth>
		
		<!-- <VisualServoIB>
			<in_position type="in" group="ImagePosition"/>
			<out_reading type="out" group="reading"/> -->
		<!-- </VisualServoIB> --> 
		
		<Mrrocpp>
			<rpcParam type="out" group="rpcParam"/>
			<rpcResult type="in" group="rpcResult"/>
		</Mrrocpp>
		
		<Window>
			<!-- <in_draw type="in" group="Labirynth"/> -->
			<in_img type="in" group="NewImage"/>
		</Window>
	</DataStreams>
</Task>
